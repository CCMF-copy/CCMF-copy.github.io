{"version":3,"sources":["components/Register.js","components/VideoList.js","components/ImageList.js","components/JokeList.js","components/Login.js","components/Header.js","router.js","serviceWorker.js","index.js"],"names":["Register","className","htmlFor","type","id","placeholder","to","React","Component","VideoList","props","state","videos","pages","refreshing","down","timeout","num","axios","get","params","page","count","then","res","push","data","result","setState","document","querySelector","scrollTop","offsetHeight","children","this","getData","fn","wait","clearTimeout","setTimeout","addEventListener","debounce","item3Scroll","bind","callback","damping","ref","el","ptr","style","height","overflow","indicator","deactivate","direction","onRefresh","video","map","val","index","key","src","header","alt","text","name","controls","top_comments_content","top_comments_header","top_comments_name","ImageList","Images","e","target","classList","contains","remove","add","images","onClick","good","bad","JokeList","Jokes","Login","padding","tabs2","title","sub","Header","tabs","initialPage","tabBarPosition","renderTab","tab","color","onTabClick","router","path","component","render","Boolean","window","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.35332fa3.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Register.css'\r\nimport {Link} from 'react-router-dom'\r\nclass Register extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"register\">\r\n                <div className=\"login\">\r\n                    <p className=\" iconfont icon-baisibudejie\"></p>\r\n                    <p className=\"loginText\">百思不得姐</p>\r\n                </div>\r\n                <div className=\"reg_login\">\r\n                    <p>用户登录</p>\r\n                    <p><label htmlFor=\"user\">账号:</label><input type=\"text\" id=\"user\" placeholder=\"请输入用户名\" /></p>\r\n                    <p><label htmlFor=\"psw\">密码:</label><input type=\"text\" id=\"psw\" placeholder=\"请输入密码\" /></p>\r\n                    <span>注册</span>\r\n                    <span>登录</span>\r\n                </div>\r\n                <div>未实现登录注册功能 <Link to=\"/all\">返回</Link></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Register","import React from 'react'\r\nimport './VideoList.css'\r\nimport { PullToRefresh } from 'antd-mobile';\r\nexport default class VideoList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            videos: [],\r\n            pages: 1,\r\n            refreshing: false,\r\n            down: true,\r\n            timeout: null\r\n        }\r\n    }\r\n    // 请求数据\r\n    getData(num) {\r\n        React.axios.get(\"https://api.apiopen.top/getJoke\", {\r\n            params: {\r\n                type: 'video',\r\n                page: num,\r\n                count: 10\r\n            }\r\n        }).then(res => {\r\n            this.state.videos.push(...res.data.result)\r\n            this.setState({\r\n                videos: this.state.videos\r\n            })\r\n        })\r\n    }\r\n    // 事件处理函数\r\n    item3Scroll() {\r\n        var father = document.querySelector(\".video\").scrollTop + document.querySelector(\".video\").offsetHeight\r\n        var child = document.querySelector(\".video\").children[0].offsetHeight\r\n        if (father >= child - 50) {\r\n            this.setState({\r\n                pages:this.state.pages+1\r\n            })\r\n            this.getData(this.state.pages)\r\n        }\r\n\r\n    }\r\n    // 防抖\r\n    debounce(fn, wait) {\r\n        var timeout = null;\r\n        return function () {\r\n            if (timeout !== null) clearTimeout(timeout);\r\n            timeout = setTimeout(fn, wait);\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        document.querySelector(\".video\")\r\n            .addEventListener(\"scroll\", this.debounce(this.item3Scroll.bind(this), 500));\r\n        this.getData(this.state.pages);\r\n    }\r\n    componentWillUnmount(){\r\n        // 卸载异步操作设置状态\r\n        this.setState = (state, callback) => {\r\n            return;\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <PullToRefresh\r\n                    damping={100}\r\n                    ref={el => this.ptr = el}\r\n                    style={{\r\n                        height: this.state.height,\r\n                        overflow: 'auto',\r\n                    }}\r\n                    indicator={this.state.down ? {} : { deactivate: '上拉可以刷新' }}\r\n                    direction={this.state.down ? 'down' : 'up'}\r\n                    refreshing={this.state.refreshing}\r\n                    onRefresh={() => {\r\n                        this.setState({ refreshing: true });\r\n                        setTimeout(() => {\r\n                            this.setState({\r\n                                refreshing: false,\r\n                                video:[]\r\n                            });\r\n                            this.getData(1)\r\n                        }, 1500);\r\n                    }}\r\n                    className=\"header-item video\">\r\n                    <div>\r\n                        {\r\n                            this.state.videos.map((val, index) => (\r\n                                <div key={index}>\r\n                                    <div className=\"userHeader\">\r\n                                        <p><img src={val.header} alt={val.text} /></p>\r\n                                        <p className=\"userHeader-name\">{val.name}</p>\r\n                                    </div>\r\n                                    <p className=\"video\">\r\n                                        <video src={val.video} controls />\r\n                                    </p>\r\n                                    {\r\n                                        val.top_comments_content != null ? (\r\n                                            <div className=\"newComment\">\r\n                                                <p className=\"newUser\"><img src={val.top_comments_header} alt={val.top_comments_header} /><span>{val.top_comments_name}</span></p>\r\n                                                <p>\r\n                                                    {val.top_comments_content}\r\n                                                </p>\r\n                                            </div>) : ''\r\n                                    }\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </PullToRefresh>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport './ImageList.css'\r\nimport { PullToRefresh } from 'antd-mobile';\r\nexport default class ImageList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            Images: [],\r\n            pages: 1,\r\n            refreshing: false,\r\n            down: true,\r\n        }\r\n    }\r\n    getData(num) {\r\n        React.axios.get(\"https:/api.apiopen.top/getJoke\", {\r\n            params: {\r\n                type: 'image',\r\n                page: num,\r\n                count: 5\r\n            }\r\n        }).then(res => {\r\n            this.state.Images.push(...res.data.result)\r\n            this.setState({\r\n                Images: this.state.Images\r\n            })\r\n        })\r\n    }\r\n    // 点赞功能的实现\r\n    good(e, index) {\r\n        if (!e.target.classList.contains(\"red\")) {\r\n            e.target.classList.add(\"red\")\r\n        } else {\r\n            e.target.classList.remove(\"red\")\r\n        }\r\n        this.setState({\r\n            Images: this.state.Images\r\n        })\r\n    }\r\n    // 踩\r\n    bad(e) {\r\n        if (e.target.classList.contains(\"bad\")) {\r\n            e.target.classList.remove(\"bad\")\r\n        } else {\r\n            e.target.classList.add(\"bad\")\r\n        }\r\n    }\r\n    // 事件处理函数\r\n    item3Scroll() {\r\n        var father = document.querySelector(\".ImageList\").scrollTop + document.querySelector(\".ImageList\").offsetHeight\r\n        var child = document.querySelector(\".ImageList\").children[0].offsetHeight\r\n        if (father >= child - 50) {\r\n            this.setState({\r\n                pages:this.state.pages+1\r\n            })\r\n            this.getData(this.state.pages)\r\n        }\r\n\r\n    }\r\n    // 防抖\r\n    debounce(fn, wait) {\r\n        var timeout = null;\r\n        return function () {\r\n            if (timeout !== null) clearTimeout(timeout);\r\n            timeout = setTimeout(fn, wait);\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        document.querySelector(\".ImageList\")\r\n            .addEventListener(\"scroll\", this.debounce(this.item3Scroll.bind(this), 500));\r\n        this.getData(this.state.pages);\r\n    }\r\n    componentWillUnmount(){\r\n        // 卸载异步操作设置状态\r\n        this.setState = (state, callback) => {\r\n            return;\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <PullToRefresh\r\n                    damping={100}\r\n                    ref={el => this.ptr = el}\r\n                    style={{\r\n                        height: this.state.height,\r\n                        overflow: 'auto',\r\n                    }}\r\n                    indicator={this.state.down ? {} : { deactivate: '上拉可以刷新' }}\r\n                    direction={this.state.down ? 'down' : 'up'}\r\n                    refreshing={this.state.refreshing}\r\n                    onRefresh={() => {\r\n                        this.setState({ refreshing: true });\r\n                        setTimeout(() => {\r\n                            this.setState({\r\n                                Images:[],\r\n                                refreshing: false,\r\n                            });\r\n                            this.getData(1)\r\n                        }, 1500);\r\n                    }}\r\n                    className=\"header-item ImageList\">\r\n                         <div>\r\n                    {\r\n                        this.state.Images.map((val, index) => (\r\n                            <div key={index} className=\"imageText\">\r\n                                <div className=\"ImageUser\">\r\n                                    <img src={val.header} alt={val.name} />\r\n                                    <span>{val.name}</span>\r\n                                </div>\r\n                                <p>{val.text}</p>\r\n                                <p>\r\n                                    <img src={val.images} alt={val.text} />\r\n                                </p>\r\n                                {\r\n                                    val.top_comments_content != null ? (\r\n                                        <div className=\"newComment\">\r\n                                            <p className=\"newUser\"><img src={val.top_comments_header} alt={val.top_comments_header} /><span>{val.top_comments_name}</span></p>\r\n                                            <p>\r\n                                                {val.top_comments_content}\r\n                                            </p>\r\n                                        </div>) : ''\r\n                                }\r\n                                <div className=\"comment\">\r\n                                    <div className=\"iconfont icon-dianzan1\" onClick={(e) => this.good(e, index)}>点赞</div>\r\n                                    <div className=\"iconfont icon-cai cai\" onClick={(e) => this.bad(e)}>\r\n                                    </div>\r\n                                    <div className=\"iconfont icon-xinxi\"></div>\r\n                                    <div className=\"iconfont icon-fenxiang\">\r\n                                        <span>分享</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n                    </PullToRefresh>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport './JokeList.css';\r\nimport { PullToRefresh } from 'antd-mobile';\r\n\r\nexport default class JokeList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            refreshing: false,\r\n            down: true,\r\n            pages: 1,\r\n            Jokes: []\r\n        }\r\n    }\r\n    getData(num) {\r\n        React.axios.get(\"https:/api.apiopen.top/getJoke\", {\r\n            params: {\r\n                type: 'text',\r\n                page: num,\r\n                count: 10\r\n            }\r\n        }).then(res => {\r\n            this.state.Jokes.push(...res.data.result)\r\n            this.setState({\r\n                Jokes: this.state.Jokes\r\n            })\r\n        })\r\n    }\r\n    // 点赞功能的实现\r\n    good(e, index) {\r\n        if (!e.target.classList.contains(\"red\")) {\r\n            e.target.classList.add(\"red\")\r\n        } else {\r\n            e.target.classList.remove(\"red\")\r\n        }\r\n    }\r\n    // 踩\r\n    bad(e) {\r\n        if (e.target.classList.contains(\"bad\")) {\r\n            e.target.classList.remove(\"bad\")\r\n        } else {\r\n            e.target.classList.add(\"bad\")\r\n        }\r\n    }\r\n    // 事件处理函数\r\n    item3Scroll() {\r\n        var father = document.querySelector(\".joke\").scrollTop + document.querySelector(\".joke\").offsetHeight\r\n        var child = document.querySelector(\".joke\").children[0].offsetHeight\r\n        if (father >= child - 50) {\r\n           this.setState({\r\n               pages:this.state.pages+1\r\n           })\r\n            this.getData(this.state.pages)\r\n        }\r\n\r\n    }\r\n    // 防抖\r\n    debounce(fn, wait) {\r\n        var timeout = null;\r\n        return function () {\r\n            if (timeout !== null) clearTimeout(timeout);\r\n            timeout = setTimeout(fn, wait);\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        document.querySelector(\".joke\")\r\n            .addEventListener(\"scroll\", this.debounce(this.item3Scroll.bind(this), 500));\r\n        this.getData(this.state.pages);\r\n    }\r\n    componentWillUnmount(){\r\n        // 卸载异步操作设置状态\r\n        this.setState = (state, callback) => {\r\n            return;\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <PullToRefresh\r\n                    damping={100}\r\n                    ref={el => this.ptr = el}\r\n                    style={{\r\n                        height: this.state.height,\r\n                        overflow: 'auto',\r\n                    }}\r\n                    indicator={this.state.down ? {} : { deactivate: '上拉可以刷新' }}\r\n                    direction={this.state.down ? 'down' : 'up'}\r\n                    refreshing={this.state.refreshing}\r\n                    onRefresh={() => {\r\n                        this.setState({ refreshing: true });\r\n                        setTimeout(() => {\r\n                            this.setState({ \r\n                                Jokes:[],\r\n                                refreshing: false,\r\n                             });\r\n                             this.getData(1)\r\n                        }, 1500);\r\n                    }}\r\n                    className=\"joke header-item\">\r\n                    <div>\r\n                        {\r\n                            this.state.Jokes.map((val, index) => (\r\n                                <div key={index} className=\"joke_item\">\r\n                                    <div className=\"jokeuser\">\r\n                                        <p className=\"head\">\r\n                                            <img src={val.header} alt={val.header} />\r\n                                        </p>\r\n                                        <h2 className=\"name\">{val.name}</h2>\r\n                                    </div>\r\n                                    <p>{val.text}</p>\r\n                                    {\r\n                                        val.top_comments_content != null ? (\r\n                                            <div className=\"newComment\">\r\n                                                <p className=\"newUser\"><img src={val.top_comments_header} alt={val.top_comments_header} /><span>{val.top_comments_name}</span></p>\r\n                                                <p>\r\n                                                    {val.top_comments_content}\r\n                                                </p>\r\n                                            </div>) : ''\r\n                                    }\r\n                                    <div className=\"comment\">\r\n                                        <div className=\"iconfont icon-dianzan1\" onClick={(e) => this.good(e, index)}>点赞</div>\r\n                                        <div className=\"iconfont icon-cai cai\" onClick={(e) => this.bad(e)}>\r\n                                        </div>\r\n                                        <div className=\"iconfont icon-xinxi\"></div>\r\n                                        <div className=\"iconfont icon-fenxiang\">\r\n                                            <span>分享</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </PullToRefresh>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport \"./Login.css\";\r\nimport { Link } from 'react-router-dom'\r\nexport default class Login extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"lists  header-item\" style={{ padding: \"0 3vw\" }}>\r\n        <div className=\"lists_head\">\r\n          <p>\r\n            <Link to=\"/login\">\r\n              <img\r\n                src=\"https://ss0.bdstatic.com/94oJfD_bAAcT8t7mm9GUKT-xh_/timg?image&quality=100&size=b4000_4000&sec=1595645437&di=c14d2f5122373cd9a48bfbded29e8eb9&src=http://a2.att.hudong.com/36/48/19300001357258133412489354717.jpg\"\r\n                alt=\"user\"\r\n              />\r\n              </Link>\r\n          </p>\r\n          <div className=\"head-text\">\r\n            <span>未登录</span>\r\n            <span>点击头像登录</span>\r\n          </div>\r\n        </div>\r\n        <ul className=\"lists_fans\">\r\n          <li>\r\n            <p>0</p>\r\n            <p>获赞</p>\r\n          </li>\r\n          <li>\r\n            <p>0</p>\r\n            <p>粉丝</p>\r\n          </li>\r\n          <li>\r\n            <p>0</p>\r\n            <p>关注</p>\r\n          </li>\r\n          <li>\r\n            <p>0</p>\r\n            <p>等级</p>\r\n          </li>\r\n        </ul>\r\n        <ul className=\"shezhi\">\r\n          <li><span className=\"iconfont icon-lingsheng\"></span>消息</li>\r\n          <li><span className=\"iconfont icon-tiezi\"></span>帖子</li>\r\n          <li><span className=\"iconfont icon-xinxi1\"></span>评论</li>\r\n          <li><span className=\"iconfont icon-wujiaoxingxingxing\r\n\"></span>收藏</li>\r\n          <li><span className=\"iconfont icon-yijianfankui\r\n\"></span>意见反馈</li>\r\n          <li><span className=\"iconfont icon-shezhi-copy\r\n\"></span>设置</li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react'\r\nimport './Header.css'\r\nimport VideoList from './VideoList'\r\nimport ImageList from './ImageList'\r\nimport JokeList from './JokeList'\r\nimport Login from './Login'\r\nimport { Tabs } from 'antd-mobile';\r\nconst tabs2 = [\r\n    { title: '视频', sub: '0' },\r\n    { title: '图片', sub: '1' },\r\n    { title: '笑话', sub: '2' },\r\n    {\r\n        title: <span className=\"iconfont icon-renwu\"></span>, sub: \"3\"\r\n    }\r\n];\r\nexport default class Header extends React.Component {\r\n    add(e) {\r\n        // console.log(e)\r\n    }\r\n    componentDidMount() {\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"login\">\r\n                    <p className=\" iconfont icon-baisibudejie\"></p>\r\n                    <p className=\"loginText\">百思不得其解</p>\r\n                </div>\r\n                <div>\r\n                    <Tabs tabs={tabs2}\r\n                        initialPage={0}\r\n                        tabBarPosition=\"top\"\r\n                        renderTab={tab => <span>{tab.title}</span>} style={{ color: 'red' }} onTabClick={(e) => this.add(e)}>\r\n                        {/* 视频 */}\r\n                        <div>\r\n                            <VideoList />\r\n                        </div>\r\n\r\n                        <div>\r\n                            <ImageList />\r\n                        </div>\r\n\r\n                        <div>\r\n                            <JokeList />\r\n                        </div>\r\n                        {/* 推荐 */}\r\n                        <div>\r\n                            <Login />\r\n                        </div>\r\n                    </Tabs>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom'\r\nimport Register from './components/Register'\r\nimport Header from './components/Header'\r\n\r\nclass router extends React.Component {\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <Route path=\"/index\" component={Header} />\r\n                <Route path=\"/login\" component={Register} />\r\n                <Route path=\"/\" render={()=>(\r\n                    <Redirect to=\"/index\" />\r\n                )}></Route>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\nexport default router","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Router from './router'\nimport * as serviceWorker from './serviceWorker';\nimport axios from 'axios'\nimport './iconfont/iconfont.css'\nReact.axios=axios\n  ReactDOM.render(\n    <Router />,\n    document.getElementById('root')\n  );\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}